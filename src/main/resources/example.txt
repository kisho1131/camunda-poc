@SuppressWarnings("unchecked")
public List<Map<String, Object>> pivotReports(List<Map<String, Object>> reportsData) {
    Map<String, Map<String, Object>> leMap = new LinkedHashMap<>();

    for (Map<String, Object> row : reportsData) {
        String leNm = (String) row.get("leNm");
        String group = (String) row.get("affirmationSubtotal2");
        String level3 = (String) row.get("paaLevel3");

        BigDecimal dly = (BigDecimal) row.get("paaDlyUSDAmtOlympus");
        BigDecimal dlyEco = (BigDecimal) row.get("paaDlyUSDAmtEOlympus");
        BigDecimal mtdEco = (BigDecimal) row.get("paaPtdUSDAmtEOlympus");
        BigDecimal mtd = (BigDecimal) row.get("paaPtdUSDAmtOlympus");

        Map<String, Object> leReport = leMap.computeIfAbsent(leNm, k -> {
            Map<String, Object> m = new LinkedHashMap<>();
            m.put("leNm", leNm);
            m.put("groups", new ArrayList<Map<String, Object>>());
            m.put("totals", new HashMap<String, BigDecimal>() {{
                put("dailyTotalAmount", BigDecimal.ZERO);
                put("economicDailyAmount", BigDecimal.ZERO);
                put("economicMTDAmount", BigDecimal.ZERO);
                put("mtdTotalAmount", BigDecimal.ZERO);
            }});
            return m;
        });

        List<Map<String, Object>> groups = (List<Map<String, Object>>) leReport.get("groups");
        Map<String, Object> groupMap = groups.stream()
            .filter(g -> g.get("groupName").equals(group))
            .findFirst()
            .orElseGet(() -> {
                Map<String, Object> g = new LinkedHashMap<>();
                g.put("groupName", group);
                g.put("rows", new ArrayList<Map<String, Object>>());
                groups.add(g);
                return g;
            });

        List<Map<String, Object>> rows = (List<Map<String, Object>>) groupMap.get("rows");

        Map<String, Object> rowMap = new LinkedHashMap<>();
        rowMap.put("name", level3);
        rowMap.put("dailyTotalAmount", dly);
        rowMap.put("economicDailyAmount", dlyEco);
        rowMap.put("economicMTDAmount", mtdEco);
        rowMap.put("mtdTotalAmount", mtd);
        rows.add(rowMap);

        // Accumulate totals
        Map<String, BigDecimal> totals = (Map<String, BigDecimal>) leReport.get("totals");
        totals.put("dailyTotalAmount", totals.get("dailyTotalAmount").add(dly));
        totals.put("economicDailyAmount", totals.get("economicDailyAmount").add(dlyEco));
        totals.put("economicMTDAmount", totals.get("economicMTDAmount").add(mtdEco));
        totals.put("mtdTotalAmount", totals.get("mtdTotalAmount").add(mtd));
    }

    return new ArrayList<>(leMap.values());
}



<table border="1" cellspacing="0" cellpadding="5" style="border-collapse: collapse; width: 100%; font-family: Arial, sans-serif; font-size: 12px;">
    <thead style="background-color:#f0f0f0;">
        <tr>
            <th style="text-align:left;">Group</th>
            <th>Daily Total Amount</th>
            <th>Economic Daily Amount</th>
            <th>Economic MTD Amount</th>
            <th>MTD Total Amount</th>
        </tr>
    </thead>
    <tbody>
    <#list reports as report>
        <tr style="background-color:#e6f2ff; font-weight: bold;">
            <td colspan="5">${report.leNm}</td>
        </tr>

        <#list report.groups as group>
            <tr style="font-weight: bold; background-color:#f9f9f9;">
                <td>${group.groupName}</td>
                <td></td><td></td><td></td><td></td>
            </tr>

            <#list group.rows as row>
                <tr>
                    <td style="padding-left: 20px;">${row.name}</td>
                    <td style="text-align:right; color:${row.dailyTotalAmount?c?starts_with("-")?then("red","black")}">${row.dailyTotalAmount?string("#,##0.##;(#,##0.##)")}</td>
                    <td style="text-align:right; color:${row.economicDailyAmount?c?starts_with("-")?then("red","black")}">${row.economicDailyAmount?string("#,##0.##;(#,##0.##)")}</td>
                    <td style="text-align:right; color:${row.economicMTDAmount?c?starts_with("-")?then("red","black")}">${row.economicMTDAmount?string("#,##0.##;(#,##0.##)")}</td>
                    <td style="text-align:right; color:${row.mtdTotalAmount?c?starts_with("-")?then("red","black")}">${row.mtdTotalAmount?string("#,##0.##;(#,##0.##)")}</td>
                </tr>
            </#list>
        </#list>

        <tr style="font-weight: bold; background-color:#d9edf7;">
            <td>Total</td>
            <td style="text-align:right;">${report.totals.dailyTotalAmount?string("#,##0.##;(#,##0.##)")}</td>
            <td style="text-align:right;">${report.totals.economicDailyAmount?string("#,##0.##;(#,##0.##)")}</td>
            <td style="text-align:right;">${report.totals.economicMTDAmount?string("#,##0.##;(#,##0.##)")}</td>
            <td style="text-align:right;">${report.totals.mtdTotalAmount?string("#,##0.##;(#,##0.##)")}</td>
        </tr>
    </#list>
    </tbody>
</table>
